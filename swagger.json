{
  "swagger" : "2.0",
  "info" : {
    "title" : "Barefoot Nomad",
    "description" : "Make company global travel and accommodation easy and convenient for the strong workforce of savvy members of staff, by leveraging the modern web."
  },
  "host": "localhost:3000",
  "basePath": "/api/v1/",
  "securityDefinitions": {
    "Bearer": { "type": "apiKey", "name": "Authorization", "in": "header" }
  },
  "security": [
    {
      "Bearer": []
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "description": "register a new user",
        "summary": "register page",
        "tags": [
          "USER"
        ],
        "operationId": "AuthSignupPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/signuprequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "security": []
      }

    },
    "/auth/reset": {
      "post": {
        "description": "TODO: Add Description",
        "summary": "Request Password Reset",
        "tags": [
          "USER"
        ],
        "operationId": "ResetPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "email",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/auth/reset/{token}": {
      "put": {
        "description": "TODO: Add Description",
        "summary": "Reset Password",
        "tags": [
          "USER"
        ],
        "operationId": "EyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9EyJlbWFpbCI6InJ1Z3VtYmlyYWpvcmR5YmFzdGllbkBnbWFpbC5jb20iLCJpYXQiOjE1NjgxMTE5MzksImV4cCI6MTU2ODExMjUzOX0XG9JideyTTLzSFm8KocZkQYdm09NVemebmPhkPOjcYPatch",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "password",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "confirm_password",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "token",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/auth/facebook": {
      "get": {
        "description": "redirect user to facebook consent screen",
        "summary": "/api/v1/auth/facebook",
        "tags": [
          "SOCIAL LOGIN"
        ],
        "operationId": "FacebookGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "302": {
            "description": "redirect to facebook",
            "headers": {}
          }
        }
      }
    },
    "/auth/fb/callback": {
      "get": {
        "description": "get profile data from facebook",
        "summary": "/api/v1/auth/fb/callback",
        "tags": [
          "SOCIAL LOGIN"
        ],
        "operationId": "FbCallbackGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            },
            "headers": {}
          }
        }
      }
    },
    "/auth/google": {
      "get": {
        "description": "redirect user to google consent screen",
        "summary": "/api/v1/auth/google",
        "tags": [
          "SOCIAL LOGIN"
        ],
        "operationId": "GoogleGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "302": {
            "description": "redirect to google",
            "headers": {}
          }
        }
      }
    },
    "/auth/google/callback": {
      "get": {
        "description": "get profile data from google",
        "summary": "/api/v1/auth/google/callback",
        "tags": [
          "SOCIAL LOGIN"
        ],
        "operationId": "GoogleCallbackGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            },
            "headers": {}
          }
        }
      }
    },
    "/editprofile": {
      "patch": {
        "description": "TODO: Add Description",
        "summary": "Edit Profile",
        "tags": [
          "USER"
        ],
        "operationId": "UserEditprofilePatch",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "email",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "firstname",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "phone",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "gender",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "dob",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "image",
            "in": "formData",
            "required": false,
            "type": "file",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/{user_id}": {
      "get": {
        "description": "TODO: Add Description",
        "summary": "Get Single Profile",
        "tags": [
          "USER"
        ],
        "operationId": "User2Get",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name" : "user_id",
            "in" : "path",
            "required" : true,
            "style" : "simple",
            "explode" : false,
            "schema" : {
              "type" : "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/users/all": {
      "get": {
        "description": "TODO: Add Description",
        "summary": "Get All Users",
        "tags": [
          "USER"
        ],
        "operationId": "UserGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],

        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/company/{company_name}": {
      "get": {
        "description": "TODO: Add Description",
        "summary": "Get by company",
        "tags": [
          "USER"
        ],
        "operationId": "UserCompanyAndelaGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name" : "company_name",
            "in" : "path",
            "required" : true,
            "style" : "simple",
            "explode" : false,
            "schema" : {
              "type" : "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/admin/users": {
      "put": {
        "description": "change a new role",
        "summary": "change role",
        "tags": [
          "Super Admin"
        ],
        "operationId": "ChangeRole",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "security": []
      }
    
    },
    "/users/{id}/requests": {
      "get": {
        "tags": [
            "REQUESTS"
        ],
        "summary": "User's requests",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "description": "User can view all the requests made overtime",
        "produces": [
            "application/json"
        ],
        "responses": {
          "200": {
            "status": 200,
            "message": "requests retrieved successfully",
            "data": []
          },
          "401": {
            "status": 401,
            "message": "Authentication error"
          },
          "403": {
            "status": 401,
            "message": "Authorization error"
          }
        }
      }
    },
    "/requests/{request_id}/comments": {
      "post": {
        "tags": [
            "REQUEST COMMENTs"
        ],
        "summary": "User's request comments",
        "parameters" : [ 
      
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
          "name" : "request_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "type" : "integer"
        }, 
        {
          "name": "Body",
          "in": "body",
          "required": true,
          "description": ""
        }],
        "description": "User,manager or SuperAdmin can post a comment on their request",
        "produces": [
            "application/json"
        ],
        "responses": {}
      },
      "get": {
        "tags": [
            "REQUEST COMMENTs"
        ],
        "summary": "all request comments",
        "parameters" : [ 
      
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
          "name" : "request_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "type" : "integer"
          
        }],
        "description": "User,manager or SuperAdmin can get all comments on their request",
        "produces": [
            "application/json"
        ],
        "responses": {
          "200": {
            "status": 200,
            "message": "requests retrieved successfully",
            "data": []
          }
        }
      }
    },
    "requests/{request_id}/comments/{comment_id}": {
      "patch": {
        "tags": [
            "REQUEST COMMENTs"
        ],
        "summary": "User's request comments",
        "parameters" : [ 
      
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
          "name" : "request_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "type" : "integer"
          
        },
        {
          "name" : "comment_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "type" : "integer"
          
        }, 
        {
          "name": "Body",
          "in": "body",
          "required": true,
          "description": ""
        }],
        "description": "User,manager or SuperAdmin can post a comment on their request",
        "produces": [
            "application/json"
        ],
        "responses": {
          "200": {
            "status": 200,
            "message": "requests retrieved successfully",
            "data": []
          }
        }
      },
      "delete": {
        "tags": [
            "REQUEST COMMENTs"
        ],
        "summary": "delete comment",
        "parameters" : [ 
      
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
          "name" : "request_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "type" : "integer"
          
        },
        {
          "name" : "comment_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "type" : "integer"
          
        }],
        "description": "User,manager or SuperAdmin can post a comment on their request",
        "produces": [
            "application/json"
        ],
        "responses": {
          "200": {
            "status": 200,
            "message": "requests retrieved successfully",
            "data": []
          }
        }
      }
    },


    "/accommodations": {
      "post": {
        "description": "add an accomodation facility",
        "summary": "Accomodation  facility",
        "tags": [
          "Accommodations"
        ],
        "operationId": "AccommodationsPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accommodation_name",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "room_type",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "description",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "location",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "quantity",
            "in": "formData",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "image",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/accommodations/hosts": {
      "post": {
        "description": "Host adds accommodation",
        "summary": "Host Add accomodation",
        "tags": [
          "Accommodations"
        ],
        "operationId": "AccommodationsHostsPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "images",
            "in": "formData",
            "required": true,
            "type": "file",
            "description": ""
          },
          {
            "name": "accommodation_name",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "description",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "location",
            "in": "formData",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "services",
            "in": "formData",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          {
            "name": "amenities",
            "in": "formData",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/accommodations/rooms": {
      "post": {
        "description": "Add a room to accommodation",
        "summary": "Add room to accommodation",
        "tags": [
          "Accommodations"
        ],
        "operationId": "AccommodationsRoomsPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accommodation_id",
            "in": "formData",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "name",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "room_type",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "description",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "cost",
            "in": "formData",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "status",
            "in": "formData",
            "required": true,
            "type": "boolean",
            "description": ""
          },
          {
            "name": "images",
            "in": "formData",
            "required": true,
            "type": "file",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/accommodations/{accommodation_id}": {
      "get": {
        "description": "Get specific accommodation",
        "summary": "Get specific Accommodation",
        "tags": [
          "Accommodations"
        ],
        "operationId": "Accommodations1Rooms1Get",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name" : "accommodation_id",
            "in" : "path",
            "required" : true,
            "style" : "simple",
            "explode" : false,
            "schema" : {
              "type" : "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/accommodations/{accommodation_id}/rooms": {
      "get": {
        "description": "Get all rooms in an accommocation",
        "summary": "Get all rooms in an Accommodations",
        "tags": [
          "Accommodations"
        ],
        "operationId": "Accommodations1Rooms1Get2",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name" : "accommodation_id",
            "in" : "path",
            "required" : true,
            "style" : "simple",
            "explode" : false,
            "schema" : {
              "type" : "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/accommodations/{accommodation_id}/rooms/{room_id}": {
      "get": {
        "description": "Get a specifc room inside an accommodation",
        "summary": "Get a specific room inside an Accommodations",
        "tags": [
          "Accommodations"
        ],
        "operationId": "Accommodations1Rooms1Get",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name" : "accommodation_id",
            "in" : "path",
            "required" : true,
            "style" : "simple",
            "explode" : false,
            "schema" : {
              "type" : "integer"
            }
          },
          {
            "name" : "room_id",
            "in" : "path",
            "required" : true,
            "style" : "simple",
            "explode" : false,
            "schema" : {
              "type" : "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/accommodations/{accommodation_id}/like": {
      "post": {
        "description": "Like and Unlike an accommodation",
        "summary": "Like/Unlike",
        "tags": [
          "Accommodations"
        ],
        "operationId": "Accommodations2LikePost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name" : "accommodation_id",
            "in" : "path",
            "required" : true,
            "style" : "simple",
            "explode" : false,
            "schema" : {
              "type" : "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/requests": {
      "patch": {
        "description": "TODO: Add Description",
        "summary": "Edit Request",
        "tags": [
          "REQUESTS"
        ],
        "operationId": "UsersRequests13EditPatch",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name" : "id",
            "in" : "path",
            "required" : true,
            "style" : "simple",
            "explode" : false,
            "schema" : {
              "type" : "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "request_type",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "reason",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "location_id",
            "in": "formData",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "destinations",
            "in": "formData",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "get": {
          "description": "search requests by key word",
          "summary": "key_word search",
          "tags": [
            "REQUESTS"
          ],
          "operationId": "RequestsSearchGet",
          "deprecated": false,
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "default": "Bearer {token}",
              "type": "string"
            },
            {
              "name": "key_word",
              "in": "query",
              "required": true,
              "type": "string",
              "description": ""
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "headers": {}
            }
          }
        }
      }
    },
    "/requests/manager":{
      "get": {
        "description": "user requests",
        "summary": "Get by request",
        "tags": [
          "REQUESTS"
        ],
        "deprecated": false,
        "produces": [
          "application/json"
        ],

        "responses": {
          "200": {
            "description": "",
            "headers": {}
          },
          "403": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/hosts": {
      "post": {
        "description": "Adding a host",
        "summary": "Add host",
        "tags": [
          "HOST"
        ],
        "operationId": "HostsPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "email",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "firstname",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "lastname",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/hosts/reset": {
      "patch": {
        "description": "TODO: Add Description",
        "summary": "reset password host",
        "tags": [
          "HOST"
        ],
        "operationId": "HostsResetPatch",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "email",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "password",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "confirm_password",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "old_password",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    }
  }
}
